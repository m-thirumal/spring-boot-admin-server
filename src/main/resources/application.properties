#spring.application.name=spring-boot-admin-server
#server.port=7126
#spring.profiles.active=DEV
#User name and password in in bycrpt
#spring.security.user.name=thirumal
#spring.security.user.password=thirumal

#Notification
#spring.boot.admin.notify.letschat.username=spring-boot-admin-server
#Slack
#dev
#spring.boot.admin.notify.slack.webhook-url=https://hooks.slack.com/services/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
#icms-qa
#spring.boot.admin.notify.slack.webhook-url=https://hooks.slack.com/services/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
#spring.boot.admin.notify.slack.message=*#{instance.registration.name}* (#{instance.id}) is *#{event.statusInfo.status}* 


#hipchat notifications
#spring.boot.admin.notify.hipchat.auth-token=<generated_token>
#spring.boot.admin.notify.hipchat.room-id=<room-id>
#spring.boot.admin.notify.hipchat.url=https://youcompany.hipchat.com/v2/

# Cluster
#spring.boot.admin.hazelcast.enabled=true
#spring.boot.admin.hazelcast.application-store=spring-boot-admin-application-store
#spring.boot.admin.hazelcast.event-store=spring-boot-admin-event-store

#configs to connect to self register the admin server as a client
#spring.boot.admin.client.url=http://localhost:7126	
#spring.boot.admin.client.username=${spring.security.user.name}
#spring.boot.admin.client.password=${spring.security.user.password}

#configs to give secured server info
#spring.boot.admin.client.metadata.user.name=${spring.security.user.name}
#spring.boot.admin.client.metadata.user.password=${spring.security.user.password}
